<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.info.web.dao.IBorrowStatisticsReportDao">
	<resultMap id="BaseResultMap" type="com.info.web.pojo.BorrowStatisticsReport">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="report_date" property="reportDate" jdbcType="DATE" />
		<result column="borrow_count" property="borrowCount" jdbcType="INTEGER" />
		<result column="current_usercount" property="currentUsercount"
				jdbcType="INTEGER" />
		<result column="all_borrow_rate" property="allBorrowRate"
				jdbcType="DECIMAL" />
		<result column="day_promotion_rate" property="dayPromotionRate"
				jdbcType="DECIMAL" />
		<result column="week_promotion_rate" property="weekPromotionRate"
				jdbcType="DECIMAL" />
		<result column="month_promotion_rate" property="monthPromotionRate"
				jdbcType="DECIMAL" />
		<result column="avg_promotion_rate" property="avgPromotionRate"
				jdbcType="DECIMAL" />
		<result column="dan_day_overduerate" property="danDayOverduerate"
				jdbcType="DECIMAL" />
		<result column="dan_avg_overduerate" property="danAvgOverduerate"
				jdbcType="DECIMAL" />
		<result column="money_day_overduerate" property="moneyDayOverduerate"
				jdbcType="DECIMAL" />
		<result column="money_avg_overduerate" property="moneyAvgOverduerate"
				jdbcType="DECIMAL" />
		<result column="dan_day_baddebtrate" property="danDayBaddebtrate"
				jdbcType="DECIMAL" />
		<result column="dan_avg_baddebtrate" property="danAvgBaddebtrate"
				jdbcType="DECIMAL" />
		<result column="money_day_baddebtrate" property="moneyDayBaddebtrate"
				jdbcType="DECIMAL" />
		<result column="money_avg_baddebtrate" property="moneyAvgBaddebtrate"
				jdbcType="DECIMAL" />
		<result column="updated_at" property="updatedAt" jdbcType="TIMESTAMP" />
	</resultMap>
	<sql id="Base_Column_List">
		id, report_date, borrow_count, current_usercount,
		all_borrow_rate,
		day_promotion_rate,
		week_promotion_rate,
		month_promotion_rate, avg_promotion_rate, dan_day_overduerate,
		dan_avg_overduerate, money_day_overduerate, money_avg_overduerate,
		dan_day_baddebtrate,
		dan_avg_baddebtrate, money_day_baddebtrate,
		money_avg_baddebtrate, updated_at
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
			parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from borrow_statistics_report
		where id = #{id,jdbcType=INTEGER}
	</select>
	<select id="findAll" resultMap="BaseResultMap"
			parameterType="Map">
		select
		<include refid="Base_Column_List" />
		from borrow_statistics_report
		<where>
			<if test="beginTime !=null and beginTime !=''">
				and <![CDATA[DATE_FORMAT(report_date,'%Y-%m-%d')>=#{beginTime}]]>
			</if>
			<if test="endTime !=null and endTime !=''">
				and <![CDATA[DATE_FORMAT(report_date,'%Y-%m-%d')<=#{endTime}]]>
			</if>
			<if test="borrowCount !=null and borrowCount !=''">
				and borrow_count = #{borrowCount}
			</if>
			<if test="dayPromotionRate !=null and dayPromotionRate !=''">
				and day_promotion_rate = #{dayPromotionRate}
			</if>
		</where>
		ORDER BY borrow_count,report_date DESC
	</select>
	<select id="selectCurrentUsercount" resultMap="BaseResultMap"
			parameterType="java.lang.String">
		SELECT base.borrowcount AS borrow_count,COUNT(1) AS
		current_usercount FROM(
		SELECT basee.user_id,COUNT(1) AS borrowcount
		FROM (
		SELECT user_id FROM asset_borrow_order WHERE STATUS
		IN(21,-11,30,-34,-20) 
		<![CDATA[	AND DATE_FORMAT(loan_time,'%Y-%m-%d')<=#{nowDate}]]>
		 
		UNION ALL
		SELECT user_id FROM asset_renewal_record 
		WHERE STATUS=1 
		<![CDATA[   AND DATE_FORMAT(old_repayment_time,'%Y-%m-%d')<=#{nowDate} ]]>
		

		) basee GROUP BY basee.user_id

		) base GROUP BY
		base.borrowcount
	</select>

	<select id="selectPromotionCountThisDay" resultMap="BaseResultMap"
			parameterType="java.lang.String">
		SELECT base.borrowcount AS borrow_count,COUNT(1) AS
		current_usercount FROM(
		SELECT basee.user_id,COUNT(1) AS borrowcount
		FROM (
		SELECT user_id FROM asset_borrow_order WHERE STATUS
		IN(21,-11,30,-34,-20)
		AND
		DATE_FORMAT(loan_time,'%Y-%m-%d')=#{nowDate}
		UNION ALL
		SELECT user_id FROM asset_renewal_record WHERE STATUS=1 AND
		DATE_FORMAT(old_repayment_time,'%Y-%m-%d')=#{nowDate}
		) basee GROUP BY basee.user_id
		) base GROUP BY base.borrowcount

	</select>

	<select id="selectPromotionCountThisWeek" resultMap="BaseResultMap"
			parameterType="java.lang.String">
		SELECT base.borrowcount AS borrow_count,COUNT(1) AS
		current_usercount FROM(

		SELECT basee.user_id,COUNT(1) AS borrowcount FROM (

		SELECT user_id FROM asset_borrow_order WHERE STATUS IN(21,-11,30,-34,-20)
		AND YEARWEEK(DATE_FORMAT(loan_time,'%Y-%m-%d'))=YEARWEEK(#{nowDate})
		UNION ALL
		SELECT user_id FROM asset_renewal_record WHERE STATUS=1 AND
		YEARWEEK(DATE_FORMAT(old_repayment_time,'%Y-%m-%d'))=YEARWEEK(#{nowDate})

		) basee GROUP BY basee.user_id

		) base GROUP BY base.borrowcount

	</select>

	<select id="selectPromotionCountThisMonth" resultMap="BaseResultMap"
			parameterType="java.lang.String">
		SELECT base.borrowcount AS borrow_count,COUNT(1) AS
		current_usercount FROM(

		SELECT basee.user_id,COUNT(1) AS borrowcount FROM (

		SELECT user_id FROM asset_borrow_order WHERE STATUS IN(21,-11,30,-34,-20)
		AND DATE_FORMAT(loan_time,'%Y-%m')=DATE_FORMAT(#{nowDate},'%Y-%m')
		UNION ALL
		SELECT user_id FROM asset_renewal_record WHERE STATUS=1 AND
		DATE_FORMAT(old_repayment_time,'%Y-%m')=DATE_FORMAT(#{nowDate},'%Y-%m')

		) basee GROUP BY basee.user_id

		) base GROUP BY base.borrowcount
	</select>
	<select id="selectOverdueThisDayCountList" resultMap="BaseResultMap" parameterType="Map">
	  <![CDATA[  SELECT  aa1.borrowcount as borrow_count,SUM(aa2.money_monut) AS moneyAmount,COUNT(aa1.user_id) AS current_usercount FROM  (
							SELECT  user_id,COUNT(1) AS borrowcount FROM (
								SELECT a.user_id FROM asset_borrow_order a
								INNER JOIN (
									SELECT user_id  FROM asset_repayment 
									WHERE DATE_FORMAT(late_fee_start_time,'%Y-%m-%d') = #{nowDate}
								) b ON a.user_id = b.user_id
								WHERE STATUS IN(21,-11,30,34,-20,23) 
								AND DATE_FORMAT(a.loan_time,'%Y-%m-%d') <= DATE_ADD(#{nowDate} , INTERVAL -1 DAY)
								UNION ALL
								SELECT c.user_id  FROM asset_renewal_record c 
								INNER JOIN (
									SELECT user_id  FROM asset_repayment 
									WHERE DATE_FORMAT(late_fee_start_time,'%Y-%m-%d') =#{nowDate}
								) d ON d.user_id = c.user_id
								WHERE			
								STATUS=1   
							)  tt GROUP BY user_id
						) aa1
						 RIGHT JOIN (
							SELECT user_id ,SUM(repayment_principal+repayment_interest)  AS money_monut FROM asset_repayment 
							WHERE DATE_FORMAT(late_fee_start_time,'%Y-%m-%d') = #{nowDate}
							GROUP BY user_id
						)  aa2  ON  aa1.user_id=aa2.user_id
						GROUP BY aa1.borrowcount
	   ]]>
  </select>
	<select id="selectOverdueThisDayCountFMList" resultMap="BaseResultMap" parameterType="Map" >
		 <![CDATA[ SELECT base.borrowcount as borrow_count,COUNT(1) AS
			current_usercount,SUM(money_amount) AS moneyAmount FROM(
			
			SELECT basee.user_id,COUNT(1) AS borrowcount,SUM(money_amount) AS money_amount
				FROM (
				SELECT a.user_id,a.money_amount  FROM asset_borrow_order a
				INNER JOIN (
					 SELECT DISTINCT user_id FROM asset_repayment 
					 WHERE DATE_FORMAT(repayment_time,'%Y-%m-%d') = DATE_ADD(#{nowDate} , INTERVAL -1 DAY) 
				) b ON a.user_id = b.user_id
				WHERE STATUS IN(21,-11,30,34,-20,23) 
				AND
				DATE_FORMAT(a.loan_time,'%Y-%m-%d') <= DATE_ADD(#{nowDate} , INTERVAL -1 DAY)
				  
				UNION ALL
				SELECT c.user_id,c.money_amount  FROM asset_renewal_record c 
				INNER JOIN (
					 SELECT DISTINCT user_id FROM asset_repayment 
					 WHERE DATE_FORMAT(first_repayment_time,'%Y-%m-%d') = DATE_ADD(#{nowDate}, INTERVAL -1 DAY) 
				) d ON d.user_id = c.user_id
				WHERE			
				STATUS=1   
			) basee GROUP BY basee.user_id   
	  ) base GROUP BY base.borrowcount
	     ]]>
  </select>

	<select id="selectBaddebtrateThisDayList" resultMap="BaseResultMap" parameterType="Map" >
		  <![CDATA[SELECT  aa1.borrowcount as borrow_count,SUM(aa2.money_monut) AS moneyAmount,COUNT(aa1.user_id) AS current_usercount FROM  (							
							SELECT  user_id,COUNT(1) AS borrowcount FROM (
								SELECT a.user_id FROM asset_borrow_order a
								INNER JOIN (
									SELECT DATEDIFF(#{nowDate},DATE_FORMAT(a.late_fee_start_time,'%Y-%m-%d')) + 1 AS lateDay,user_id						 
									FROM asset_repayment a									 
									WHERE DATE_FORMAT(a.late_fee_start_time,'%Y-%m-%d') <= #{nowDate}
									AND (a.status = -11 OR DATE_FORMAT(a.repayment_real_time,'%Y-%m-%d') > #{nowDate})
									GROUP BY user_id
									HAVING lateDay = 61									 
								) b ON a.user_id = b.user_id
								WHERE STATUS IN(21,-11,30,34,-20,23)
								AND DATE_FORMAT(a.loan_time,'%Y-%m-%d') <= DATE_ADD(#{nowDate} , INTERVAL -62 DAY)
								UNION ALL
								SELECT c.user_id  FROM asset_renewal_record c 
								INNER JOIN (
									SELECT DATEDIFF(#{nowDate},DATE_FORMAT(a.late_fee_start_time,'%Y-%m-%d')) + 1 AS lateDay,user_id						 
									FROM asset_repayment a									 
									WHERE DATE_FORMAT(a.late_fee_start_time,'%Y-%m-%d') <= #{nowDate}
									AND (a.status = -11 OR DATE_FORMAT(a.repayment_real_time,'%Y-%m-%d') > #{nowDate})
									GROUP BY user_id
									HAVING lateDay = 61
								) d ON d.user_id = c.user_id								
								WHERE			
								STATUS=1   
							)  tt GROUP BY user_id							
						) aa1						
						 RIGHT JOIN (						
							SELECT DATEDIFF(#{nowDate},DATE_FORMAT(a.late_fee_start_time,'%Y-%m-%d')) + 1 AS lateDay,SUM(repayment_principal+repayment_interest)  AS money_monut,user_id						 
									FROM asset_repayment a									 
									WHERE DATE_FORMAT(a.late_fee_start_time,'%Y-%m-%d') <= #{nowDate}
									AND (a.status = -11 OR DATE_FORMAT(a.repayment_real_time,'%Y-%m-%d') > #{nowDate})
									GROUP BY user_id
									HAVING lateDay = 61
						)  aa2  ON  aa1.user_id=aa2.user_id
						GROUP BY aa1.borrowcount
	  	  ]]>
  </select>

	<select id="selectBaddebtrateThisDayFMList" resultMap="BaseResultMap" parameterType="Map" >
		 <![CDATA[ SELECT base.borrowcount AS borrow_count,COUNT(1) AS
			current_usercount,SUM(money_amount) AS moneyAmount FROM(
			
			SELECT basee.user_id,COUNT(1) AS borrowcount,SUM(money_amount) AS money_amount
				FROM (
				SELECT a.user_id,a.money_amount  FROM asset_borrow_order a
				INNER JOIN (
					 SELECT DISTINCT user_id FROM asset_repayment 
					 WHERE DATE_FORMAT(repayment_time,'%Y-%m-%d') = DATE_ADD(#{nowDate} , INTERVAL -62 DAY) 
				) b ON a.user_id = b.user_id
				WHERE STATUS IN(21,-11,30,34,-20,23) 
				AND
				DATE_FORMAT(a.loan_time,'%Y-%m-%d') <= DATE_ADD(#{nowDate} , INTERVAL -62 DAY)
				  
				UNION ALL
				SELECT c.user_id,c.money_amount  FROM asset_renewal_record c 
				INNER JOIN (
					 SELECT DISTINCT user_id FROM asset_repayment 
					 WHERE DATE_FORMAT(first_repayment_time,'%Y-%m-%d') = DATE_ADD(#{nowDate}, INTERVAL -62 DAY) 
				) d ON d.user_id = c.user_id
				WHERE			
				STATUS=1   
			) basee GROUP BY basee.user_id   
	  ) base GROUP BY base.borrowcount
	    HAVING borrow_count=#{borrowCount}
	     ]]>
  </select>


	<select id="selectAvgThisDayCountList" resultType="map" parameterType="map" >
		SELECT borrow_count AS borrowCountReport,COUNT(1) AS reportCount,SUM(dan_day_overduerate) AS danDayOverduerate,
		SUM(money_day_overduerate) AS moneyDayOverduerate, SUM(dan_day_baddebtrate) AS danDayBaddebtrate,SUM(money_day_baddebtrate) AS moneyDayBaddebtrate 
		FROM borrow_statistics_report GROUP BY borrow_count 
  </select>



	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from
		borrow_statistics_report
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="com.info.web.pojo.BorrowStatisticsReport">
		insert into
		borrow_statistics_report (id, report_date, borrow_count,
		current_usercount, all_borrow_rate, day_promotion_rate,
		week_promotion_rate, month_promotion_rate,
		avg_promotion_rate,
		dan_day_overduerate, dan_avg_overduerate,
		money_day_overduerate,
		money_avg_overduerate,
		dan_day_baddebtrate, dan_avg_baddebtrate,
		money_day_baddebtrate,
		money_avg_baddebtrate, updated_at)
		values
		(#{id,jdbcType=INTEGER}, #{reportDate,jdbcType=DATE},
		#{borrowCount,jdbcType=INTEGER},
		#{currentUsercount,jdbcType=INTEGER},
		#{allBorrowRate,jdbcType=DECIMAL},
		#{dayPromotionRate,jdbcType=DECIMAL},
		#{weekPromotionRate,jdbcType=DECIMAL},
		#{monthPromotionRate,jdbcType=DECIMAL},
		#{avgPromotionRate,jdbcType=DECIMAL},
		#{danDayOverduerate,jdbcType=DECIMAL},
		#{danAvgOverduerate,jdbcType=DECIMAL},
		#{moneyDayOverduerate,jdbcType=DECIMAL},
		#{moneyAvgOverduerate,jdbcType=DECIMAL},
		#{danDayBaddebtrate,jdbcType=DECIMAL},
		#{danAvgBaddebtrate,jdbcType=DECIMAL},
		#{moneyDayBaddebtrate,jdbcType=DECIMAL},
		#{moneyAvgBaddebtrate,jdbcType=DECIMAL},
		#{updatedAt,jdbcType=TIMESTAMP})
	</insert>
	<insert id="insertSelective" parameterType="com.info.web.pojo.BorrowStatisticsReport">
		insert into borrow_statistics_report
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="reportDate != null">
				report_date,
			</if>
			<if test="borrowCount != null">
				borrow_count,
			</if>
			<if test="currentUsercount != null">
				current_usercount,
			</if>
			<if test="allBorrowRate != null">
				all_borrow_rate,
			</if>
			<if test="dayPromotionRate != null">
				day_promotion_rate,
			</if>
			<if test="weekPromotionRate != null">
				week_promotion_rate,
			</if>
			<if test="monthPromotionRate != null">
				month_promotion_rate,
			</if>
			<if test="avgPromotionRate != null">
				avg_promotion_rate,
			</if>
			<if test="danDayOverduerate != null">
				dan_day_overduerate,
			</if>
			<if test="danAvgOverduerate != null">
				dan_avg_overduerate,
			</if>
			<if test="moneyDayOverduerate != null">
				money_day_overduerate,
			</if>
			<if test="moneyAvgOverduerate != null">
				money_avg_overduerate,
			</if>
			<if test="danDayBaddebtrate != null">
				dan_day_baddebtrate,
			</if>
			<if test="danAvgBaddebtrate != null">
				dan_avg_baddebtrate,
			</if>
			<if test="moneyDayBaddebtrate != null">
				money_day_baddebtrate,
			</if>
			<if test="moneyAvgBaddebtrate != null">
				money_avg_baddebtrate,
			</if>
			<if test="updatedAt != null">
				updated_at,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="reportDate != null">
				#{reportDate,jdbcType=DATE},
			</if>
			<if test="borrowCount != null">
				#{borrowCount,jdbcType=INTEGER},
			</if>
			<if test="currentUsercount != null">
				#{currentUsercount,jdbcType=INTEGER},
			</if>
			<if test="allBorrowRate != null">
				#{allBorrowRate,jdbcType=DECIMAL},
			</if>
			<if test="dayPromotionRate != null">
				#{dayPromotionRate,jdbcType=DECIMAL},
			</if>
			<if test="weekPromotionRate != null">
				#{weekPromotionRate,jdbcType=DECIMAL},
			</if>
			<if test="monthPromotionRate != null">
				#{monthPromotionRate,jdbcType=DECIMAL},
			</if>
			<if test="avgPromotionRate != null">
				#{avgPromotionRate,jdbcType=DECIMAL},
			</if>
			<if test="danDayOverduerate != null">
				#{danDayOverduerate,jdbcType=DECIMAL},
			</if>
			<if test="danAvgOverduerate != null">
				#{danAvgOverduerate,jdbcType=DECIMAL},
			</if>
			<if test="moneyDayOverduerate != null">
				#{moneyDayOverduerate,jdbcType=DECIMAL},
			</if>
			<if test="moneyAvgOverduerate != null">
				#{moneyAvgOverduerate,jdbcType=DECIMAL},
			</if>
			<if test="danDayBaddebtrate != null">
				#{danDayBaddebtrate,jdbcType=DECIMAL},
			</if>
			<if test="danAvgBaddebtrate != null">
				#{danAvgBaddebtrate,jdbcType=DECIMAL},
			</if>
			<if test="moneyDayBaddebtrate != null">
				#{moneyDayBaddebtrate,jdbcType=DECIMAL},
			</if>
			<if test="moneyAvgBaddebtrate != null">
				#{moneyAvgBaddebtrate,jdbcType=DECIMAL},
			</if>
			<if test="updatedAt != null">
				#{updatedAt,jdbcType=TIMESTAMP},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.info.web.pojo.BorrowStatisticsReport">
		update borrow_statistics_report
		<set>
			<if test="reportDate != null">
				report_date = #{reportDate,jdbcType=DATE},
			</if>
			<if test="borrowCount != null">
				borrow_count = #{borrowCount,jdbcType=INTEGER},
			</if>
			<if test="currentUsercount != null">
				current_usercount = #{currentUsercount,jdbcType=INTEGER},
			</if>
			<if test="allBorrowRate != null">
				all_borrow_rate = #{allBorrowRate,jdbcType=DECIMAL},
			</if>
			<if test="dayPromotionRate != null">
				day_promotion_rate =
				#{dayPromotionRate,jdbcType=DECIMAL},
			</if>
			<if test="weekPromotionRate != null">
				week_promotion_rate =
				#{weekPromotionRate,jdbcType=DECIMAL},
			</if>
			<if test="monthPromotionRate != null">
				month_promotion_rate =
				#{monthPromotionRate,jdbcType=DECIMAL},
			</if>
			<if test="avgPromotionRate != null">
				avg_promotion_rate =
				#{avgPromotionRate,jdbcType=DECIMAL},
			</if>
			<if test="danDayOverduerate != null">
				dan_day_overduerate =
				#{danDayOverduerate,jdbcType=DECIMAL},
			</if>
			<if test="danAvgOverduerate != null">
				dan_avg_overduerate =
				#{danAvgOverduerate,jdbcType=DECIMAL},
			</if>
			<if test="moneyDayOverduerate != null">
				money_day_overduerate =
				#{moneyDayOverduerate,jdbcType=DECIMAL},
			</if>
			<if test="moneyAvgOverduerate != null">
				money_avg_overduerate =
				#{moneyAvgOverduerate,jdbcType=DECIMAL},
			</if>
			<if test="danDayBaddebtrate != null">
				dan_day_baddebtrate =
				#{danDayBaddebtrate,jdbcType=DECIMAL},
			</if>
			<if test="danAvgBaddebtrate != null">
				dan_avg_baddebtrate =
				#{danAvgBaddebtrate,jdbcType=DECIMAL},
			</if>
			<if test="moneyDayBaddebtrate != null">
				money_day_baddebtrate =
				#{moneyDayBaddebtrate,jdbcType=DECIMAL},
			</if>
			<if test="moneyAvgBaddebtrate != null">
				money_avg_baddebtrate =
				#{moneyAvgBaddebtrate,jdbcType=DECIMAL},
			</if>
			<if test="updatedAt != null">
				updated_at = #{updatedAt,jdbcType=TIMESTAMP},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.info.web.pojo.BorrowStatisticsReport">
		update
		borrow_statistics_report
		set report_date = #{reportDate,jdbcType=DATE},
		borrow_count = #{borrowCount,jdbcType=INTEGER},
		current_usercount =
		#{currentUsercount,jdbcType=INTEGER},
		all_borrow_rate =
		#{allBorrowRate,jdbcType=DECIMAL},
		day_promotion_rate =
		#{dayPromotionRate,jdbcType=DECIMAL},
		week_promotion_rate =
		#{weekPromotionRate,jdbcType=DECIMAL},
		month_promotion_rate =
		#{monthPromotionRate,jdbcType=DECIMAL},
		avg_promotion_rate =
		#{avgPromotionRate,jdbcType=DECIMAL},
		dan_day_overduerate =
		#{danDayOverduerate,jdbcType=DECIMAL},
		dan_avg_overduerate =
		#{danAvgOverduerate,jdbcType=DECIMAL},
		money_day_overduerate =
		#{moneyDayOverduerate,jdbcType=DECIMAL},
		money_avg_overduerate =
		#{moneyAvgOverduerate,jdbcType=DECIMAL},
		dan_day_baddebtrate =
		#{danDayBaddebtrate,jdbcType=DECIMAL},
		dan_avg_baddebtrate =
		#{danAvgBaddebtrate,jdbcType=DECIMAL},
		money_day_baddebtrate =
		#{moneyDayBaddebtrate,jdbcType=DECIMAL},
		money_avg_baddebtrate =
		#{moneyAvgBaddebtrate,jdbcType=DECIMAL},
		updated_at =
		#{updatedAt,jdbcType=TIMESTAMP}
		where id = #{id,jdbcType=INTEGER}
	</update>

	<update id="updateByReportDate" parameterType="com.info.web.pojo.BorrowStatisticsReport">
		update
		borrow_statistics_report
		<set>
			<if test="danDayOverduerate != null">
				dan_day_overduerate =
				#{danDayOverduerate,jdbcType=DECIMAL},
			</if>
			<if test="danAvgOverduerate != null">
				dan_avg_overduerate =
				#{danAvgOverduerate,jdbcType=DECIMAL},
			</if>
			<if test="moneyDayOverduerate != null">
				money_day_overduerate =
				#{moneyDayOverduerate,jdbcType=DECIMAL},
			</if>
			<if test="moneyAvgOverduerate != null">
				money_avg_overduerate =
				#{moneyAvgOverduerate,jdbcType=DECIMAL},
			</if>
			<if test="danDayBaddebtrate != null">
				dan_day_baddebtrate =
				#{danDayBaddebtrate,jdbcType=DECIMAL},
			</if>
			<if test="danAvgBaddebtrate != null">
				dan_avg_baddebtrate =
				#{danAvgBaddebtrate,jdbcType=DECIMAL},
			</if>
			<if test="moneyDayBaddebtrate != null">
				money_day_baddebtrate =
				#{moneyDayBaddebtrate,jdbcType=DECIMAL},
			</if>
			<if test="moneyAvgBaddebtrate != null">
				money_avg_baddebtrate =
				#{moneyAvgBaddebtrate,jdbcType=DECIMAL},
			</if>
		</set>
		where DATE_FORMAT(report_date,'%Y-%m-%d') =<![CDATA[ DATE_FORMAT(#{reportDate},'%Y-%m-%d')  ]]>
		and borrow_count=#{borrowCount}
	</update>

	<delete id="delSelective" parameterType="com.info.web.pojo.BorrowStatisticsReport">
		DELETE FROM borrow_statistics_report
		where <![CDATA[report_date between str_to_date(#{reportDate},'%Y-%m-%d') and date_add(#{reportDate}, interval 1 day)]]>
	</delete>
	<!-- 查询老用户对应日期的申请借款人数 -->
	<select id="selectTotalApplyforDay" resultType="java.lang.Long" parameterType="java.lang.String">
	    select count(id) from asset_borrow_order where created_at between str_to_date(#{date},'%Y-%m-%d') and date_add(#{date}, interval 1 day) AND  customer_type='1'
	</select>
	<!-- 查询老用户对应日期的成功借款人数 -->
	<select id="selectTotalSuceesstforDay" resultType="java.lang.Long" parameterType="java.lang.String">
	    select count(id) from asset_borrow_order where  status IN(21,-11,23,30,-20,34) and created_at between str_to_date(#{date},'%Y-%m-%d') and date_add(#{date}, interval 1 day) AND customer_type='1'
	</select>

</mapper>