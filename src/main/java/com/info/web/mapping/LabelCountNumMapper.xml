<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.info.web.dao.ILabelCountNumDao" >
  <resultMap id="BaseResultMap" type="com.info.web.pojo.LabelCountNum" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="base_id" property="baseId" jdbcType="INTEGER" />
    <result column="job_kind" property="jobKind" jdbcType="TINYINT" />
    <result column="value" property="value" jdbcType="VARCHAR" />
    <result column="num" property="num" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, base_id, job_kind, value, num
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from label_count_num
    where id = #{id,jdbcType=INTEGER}
  </select>

  <select id="findByParams" resultMap="BaseResultMap" parameterType="map">
    select
    <include refid="Base_Column_List" />
    from label_count_num
    <where>
      <if test="baseId != null">
        and base_id = #{baseId}
      </if>
    </where>
  </select>

  <select id="findSecondLevelNum" resultType="com.info.web.pojo.LabelCountPageResult" parameterType="map">
      SELECT b.dict_name name,sum(a.num) num from label_count_num a INNER JOIN back_dictionary b on a.`value` = b.data_value
      where b.dict_value in ('user_remark', 'user_remark_online') and base_id = #{baseId}
      GROUP BY b.dict_name
  </select>

  <select id="findThirdLevelNum" resultType="com.info.web.pojo.LabelCountPageResult" parameterType="map">
    SELECT b.data_name name,a.num,a.job_kind jobKind from label_count_num a INNER JOIN back_dictionary b on a.`value` = b.data_value
    where b.dict_value in ('user_remark', 'user_remark_online') and base_id = #{baseId} and dict_name = #{labelName}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from label_count_num
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.info.web.pojo.LabelCountNum" >
    insert into label_count_num (id, base_id, job_kind, 
      value, num)
    values (#{id,jdbcType=INTEGER}, #{baseId,jdbcType=INTEGER}, #{jobKind,jdbcType=TINYINT}, 
      #{value,jdbcType=VARCHAR}, #{num,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.info.web.pojo.LabelCountNum" >
    insert into label_count_num
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="baseId != null" >
        base_id,
      </if>
      <if test="jobKind != null" >
        job_kind,
      </if>
      <if test="value != null" >
        value,
      </if>
      <if test="num != null" >
        num,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="baseId != null" >
        #{baseId,jdbcType=INTEGER},
      </if>
      <if test="jobKind != null" >
        #{jobKind,jdbcType=TINYINT},
      </if>
      <if test="value != null" >
        #{value,jdbcType=VARCHAR},
      </if>
      <if test="num != null" >
        #{num,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.info.web.pojo.LabelCountNum" >
    update label_count_num
    <set >
      <if test="baseId != null" >
        base_id = #{baseId,jdbcType=INTEGER},
      </if>
      <if test="jobKind != null" >
        job_kind = #{jobKind,jdbcType=TINYINT},
      </if>
      <if test="value != null" >
        value = #{value,jdbcType=VARCHAR},
      </if>
      <if test="num != null" >
        num = #{num,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.info.web.pojo.LabelCountNum" >
    update label_count_num
    set base_id = #{baseId,jdbcType=INTEGER},
      job_kind = #{jobKind,jdbcType=TINYINT},
      value = #{value,jdbcType=VARCHAR},
      num = #{num,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>